#!/usr/bin/env -S uv run --with youtube-transcript-api python3

import re
import sys
import warnings

# Suppress urllib3 warning
warnings.filterwarnings("ignore", message="urllib3 v2 only supports OpenSSL 1.1.1+")

from youtube_transcript_api import YouTubeTranscriptApi
from youtube_transcript_api.formatters import TextFormatter


def extract_video_id(url):
    """Extract video ID from various YouTube URL formats"""
    # Handle different YouTube URL formats
    patterns = [
        r"(?:youtube\.com/watch\?v=|youtu\.be/|youtube\.com/embed/)([^&\n?#]+)",
        r"youtube\.com/v/([^&\n?#]+)",
    ]

    for pattern in patterns:
        match = re.search(pattern, url)
        if match:
            return match.group(1)

    # If it's already just a video ID
    if re.match(r"^[a-zA-Z0-9_-]{11}$", url):
        return url

    return None


def get_transcript(video_id):
    """Get transcript for a video ID"""
    try:
        ytt_api = YouTubeTranscriptApi()
        transcript = ytt_api.fetch(video_id)

        # Use TextFormatter to get clean text output
        formatter = TextFormatter()
        return formatter.format_transcript(transcript)

    except Exception as e:
        print(f"Error getting transcript: {e}")
        return None


def main():
    if len(sys.argv) != 2:
        print("Usage: yt-transcript <youtube_url_or_video_id>")
        sys.exit(1)

    input_url = sys.argv[1]
    video_id = extract_video_id(input_url)

    if not video_id:
        print("Error: Could not extract video ID from input")
        sys.exit(1)

    transcript = get_transcript(video_id)
    if transcript:
        print(transcript)
    else:
        sys.exit(1)


if __name__ == "__main__":
    main()
